name: AA Web Github Actions
on: 
  push:
    branches:
      - develop
      - release
      - main
env:
  BUCKET_NAME : "aainfrastructurestack-aawebdc8b53ba-cbu8gp0zf3jk"
  AWS_REGION : "ap-northeast-1"
  DISTRIBUTION_ID: "E2AIBQ35O6YBUB"
permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."

      - run: echo "üîé The BUCKET_NAME is ${{ env.BUCKET_NAME }}"
      - run: echo "üîé The AWS_REGION is ${{ env.AWS_REGION }}"
      - run: echo "üîé The DISTRIBUTION_ID is ${{ env.DISTRIBUTION_ID }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::319960151867:role/AAProject

      - name: Check Node
        run: node --version

      - name: Npm install
        run: npm install
      
      - name: Build production vue dist
        if: ${{ github.ref_name == 'main' }}
        run: npm run build && ls dist

      - name: Empty S3 production bucket files
        if: ${{ github.ref_name == 'main' }}
        run: aws s3 rm s3://${{ env.BUCKET_NAME }} --recursive

      - name: Deploy to S3 production bucket
        if: ${{ github.ref_name == 'main' }}
        run: aws s3 sync dist s3://${{ env.BUCKET_NAME }}

      - name: Invalidate production CloudFront
        if: ${{ github.ref_name == 'main' }}
        run: aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/index.html"

